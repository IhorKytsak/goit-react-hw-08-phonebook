{"version":3,"file":"static/js/731.4940398f.chunk.js","mappings":"+MAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAA5B,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,MAAnB,EACpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASA,SAASK,SAA5B,EACvBC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASA,SAASO,KAA5B,E,mCCFhC,EAAuC,0C,SC4EvC,EArEoB,WAClB,OAA8BC,EAAAA,EAAAA,UAAS,CACrCC,KAAM,GACNC,OAAQ,KAFV,eAAOC,EAAP,KAAgBC,EAAhB,KAKMC,GAAWC,EAAAA,EAAAA,MAEXd,GAAWe,EAAAA,EAAAA,IAAYjB,GAEvBkB,EAAgB,SAAAC,GACpB,MAAwBA,EAAMC,cAAtBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MAEdP,GAAW,SAAAQ,GAAS,yBAAUA,GAAV,cAAsBX,EAAOU,GAA7B,GACrB,EAqBD,OACE,gBAAKE,UAAWC,EAAhB,UACE,kBAAMC,KAAK,SAASC,SArBF,SAAAP,GACpBA,EAAMQ,iBAEN,IAAMC,EAAe1B,EAAS2B,KAAI,SAAAhB,GAAO,OAAIA,EAAQF,IAAZ,IAEpCiB,EAAaE,SAASjB,EAAQF,MAQjCoB,MAAM,GAAD,OAAIlB,EAAQF,KAAZ,6BAPLI,GACEiB,EAAAA,EAAAA,IAAW,CACTrB,KAAME,EAAQF,KACdC,OAAQC,EAAQD,UAOtBE,EAAW,CAAEH,KAAM,GAAIC,OAAQ,IAChC,EAIG,WACE,qCAEE,kBACEa,KAAK,OACLd,KAAK,OACLsB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUlB,EACVG,MAAOR,EAAQF,WAGnB,uCAEE,kBACEc,KAAK,MACLd,KAAK,SACLsB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUlB,EACVG,MAAOR,EAAQD,aAInB,mBAAQa,KAAK,SAAb,6BAIP,E,SCtDD,EAjBe,WACb,IAAMV,GAAWC,EAAAA,EAAAA,MAQjB,OACE,4BACE,kDACA,kBAAOoB,SATmB,SAAAjB,GAC5B,IAAME,EAAQF,EAAMC,cAAcC,MAAMgB,cAExCtB,GAASuB,EAAAA,EAAAA,IAAejB,GACzB,MAQF,EClBD,EAA8B,iCC4B9B,EAtBoB,WAClB,IAAMN,GAAWC,EAAAA,EAAAA,MAEXd,GAAWe,EAAAA,EAAAA,IAAYjB,GACvBK,GAASY,EAAAA,EAAAA,IAAYb,GAMrBmC,EAJgBrC,EAASG,QAAO,SAAAQ,GAAO,OAC3CA,EAAQF,KAAK0B,cAAcP,SAASzB,EADO,IAIZwB,KAAI,SAAAhB,GAAO,OAC1C,oCACMA,EAAQF,KADd,aACuBE,EAAQD,SAC7B,mBAAQ4B,QAAS,kBAAMzB,GAAS0B,EAAAA,EAAAA,IAAc5B,EAAQ6B,IAArC,EAAjB,sBAFO7B,EAAQ6B,GADyB,IAS5C,OAAO,eAAInB,UAAWC,EAAf,SAAoCe,GAC5C,E,SC1BD,EAAkC,kCCoClC,EAzBiB,WACf,IAAMxB,GAAWC,EAAAA,EAAAA,MAEXT,GAAYU,EAAAA,EAAAA,IAAYX,GACxBG,GAAQQ,EAAAA,EAAAA,IAAYT,GAM1B,OAJAmC,EAAAA,EAAAA,YAAU,WACR5B,GAAS6B,EAAAA,EAAAA,MACV,GAAE,CAAC7B,KAGF,iBAAKQ,UAAWC,EAAhB,WACE,uCACA,SAAC,EAAD,KACA,sCACA,SAAC,EAAD,IACCjB,IAAa,SAACsC,EAAA,EAAD,IACbpC,IAAUF,IACT,eAAIuC,MAAO,CAAEC,MAAO,OAApB,SAA8BtC,GAAS,cAEvCF,IAAcE,IAAS,SAAC,EAAD,MAG9B,C","sources":["redux/contacts/contactsSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactFormContainer\":\"ContactForm_contactFormContainer__I+TXv\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [contact, setContact] = useState({\n    name: '',\n    number: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const changeHandler = event => {\n    const { name, value } = event.currentTarget;\n\n    setContact(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const contactNames = contacts.map(contact => contact.name);\n\n    if (!contactNames.includes(contact.name)) {\n      dispatch(\n        addContact({\n          name: contact.name,\n          number: contact.number,\n        })\n      );\n    } else {\n      alert(`${contact.name} is already in contacts.`);\n    }\n\n    setContact({ name: '', number: '' });\n  };\n\n  return (\n    <div className={styles.contactFormContainer}>\n      <form type=\"submit\" onSubmit={submitHandler}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={changeHandler}\n            value={contact.name}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={changeHandler}\n            value={contact.number}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\n\nimport { setFilterValue } from 'redux/contacts/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const setFilterValueHandler = event => {\n    const value = event.currentTarget.value.toUpperCase();\n\n    dispatch(setFilterValue(value));\n  };\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input onChange={setFilterValueHandler}></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredArray = contacts.filter(contact =>\n    contact.name.toUpperCase().includes(filter)\n  );\n\n  const createList = filteredArray.map(contact => (\n    <li key={contact.id}>\n      {`${contact.name}: ${contact.number}`}\n      <button onClick={() => dispatch(deleteContact(contact.id))}>\n        Delete\n      </button>\n    </li>\n  ));\n\n  return <ul className={styles.contactList}>{createList}</ul>;\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsWrapper\":\"Contacts_contactsWrapper__yIlDc\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectIsLoading, selectError } from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader//Loader';\n\nimport styles from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.contactsWrapper}>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      {error && !isLoading && (\n        <h3 style={{ color: 'red' }}>{error || 'Error...'}</h3>\n      )}\n      {!isLoading && !error && <ContactList />}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","useState","name","number","contact","setContact","dispatch","useDispatch","useSelector","changeHandler","event","currentTarget","value","prevState","className","styles","type","onSubmit","preventDefault","contactNames","map","includes","alert","addContact","pattern","title","required","onChange","toUpperCase","setFilterValue","createList","onClick","deleteContact","id","useEffect","fetchContacts","Loader","style","color"],"sourceRoot":""}